module.exports = { contents : "import { isNullOrUndef } from '~/packages/inferno-shared/dist-es';\nimport { wrappers } from './processElement';\nimport { EMPTY_OBJ } from '../utils';\nfunction isControlled(props) {\n    return !isNullOrUndef(props.value);\n}\nfunction wrappedOnChange(e) {\n    let vNode = this.vNode;\n    const events = vNode.events || EMPTY_OBJ;\n    const event = events.onChange;\n    if (event.event) {\n        event.event(event.data, e);\n    } else {\n        event(e);\n    }\n}\nfunction onTextareaInputChange(e) {\n    let vNode = this.vNode;\n    const events = vNode.events || EMPTY_OBJ;\n    const dom = vNode.dom;\n    if (events.onInput) {\n        const event = events.onInput;\n        if (event.event) {\n            event.event(event.data, e);\n        } else {\n            event(e);\n        }\n    } else if (events.oninput) {\n        events.oninput(e);\n    }\n    applyValue(this.vNode, dom, false);\n}\nexport function processTextarea(vNode, dom, mounting) {\n    const props = vNode.props || EMPTY_OBJ;\n    applyValue(vNode, dom, mounting);\n    let textareaWrapper = wrappers.get(dom);\n    if (isControlled(props)) {\n        if (!textareaWrapper) {\n            textareaWrapper = { vNode };\n            dom.oninput = onTextareaInputChange.bind(textareaWrapper);\n            dom.oninput.wrapped = true;\n            if (props.onChange) {\n                dom.onchange = wrappedOnChange.bind(textareaWrapper);\n                dom.onchange.wrapped = true;\n            }\n            wrappers.set(dom, textareaWrapper);\n        }\n        textareaWrapper.vNode = vNode;\n        return true;\n    }\n    return false;\n}\nexport function applyValue(vNode, dom, mounting) {\n    const props = vNode.props || EMPTY_OBJ;\n    const value = props.value;\n    const domValue = dom.value;\n    if (isNullOrUndef(value)) {\n        if (mounting) {\n            const defaultValue = props.defaultValue;\n            if (!isNullOrUndef(defaultValue)) {\n                if (defaultValue !== domValue) {\n                    dom.value = defaultValue;\n                }\n            } else if (domValue !== '') {\n                dom.value = '';\n            }\n        }\n    } else {\n        if (domValue !== value) {\n            dom.value = value;\n        }\n    }\n}", 
dependencies : ["~/packages/inferno-shared/dist-es","./processElement","../utils"], 
sourceMap : {},
headerContent : undefined, 
mtime : 1488885249000
};