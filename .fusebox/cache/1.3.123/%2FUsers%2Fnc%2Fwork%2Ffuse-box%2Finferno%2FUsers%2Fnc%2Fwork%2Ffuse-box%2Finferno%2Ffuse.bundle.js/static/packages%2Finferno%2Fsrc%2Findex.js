module.exports = { contents : "import {\n    warning,\n    NO_OP\n} from '~/packages/inferno-shared/dist-es';\nimport {\n    Props,\n    VNode,\n    createVNode,\n    cloneVNode,\n    InfernoInput,\n    InfernoChildren\n} from './core/VNodes';\nimport linkEvent from './DOM/events/linkEvent';\nimport options from './core/options';\nimport {\n    render,\n    findDOMNode,\n    createRenderer\n} from './DOM/rendering';\nimport { EMPTY_OBJ } from './DOM/utils';\nif (process.env.NODE_ENV !== 'production') {\n    const testFunc = function testFn() {\n    };\n    if ((testFunc.name || testFunc.toString()).indexOf('testFn') === -1) {\n        warning('It looks like you\\'re using a minified copy of the development build ' + 'of Inferno. When deploying Inferno apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See http://infernojs.org for more details.');\n    }\n}\nexport const version = 'VERSION';\nexport default {\n    linkEvent,\n    createVNode,\n    cloneVNode,\n    NO_OP,\n    EMPTY_OBJ,\n    render,\n    findDOMNode,\n    createRenderer,\n    options,\n    version\n};\nexport {\n    Props,\n    VNode,\n    InfernoChildren,\n    InfernoInput,\n    linkEvent,\n    createVNode,\n    cloneVNode,\n    NO_OP,\n    EMPTY_OBJ,\n    render,\n    findDOMNode,\n    createRenderer,\n    options\n};\nexport {\n    isUnitlessNumber as internal_isUnitlessNumber\n} from './DOM/constants';\nexport {\n    normalize as internal_normalize\n} from './core/normalization';", 
dependencies : ["~/packages/inferno-shared/dist-es","./core/VNodes","./DOM/events/linkEvent","./core/options","./DOM/rendering","./DOM/utils","process"], 
sourceMap : {},
headerContent : ["/* fuse:injection: */ var process = require(\"process\");"], 
mtime : 1488900706000
};